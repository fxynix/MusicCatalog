name: Deploy to Render
on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Проверка подключения к Render API
      - name: Verify Render API Access
        run: |
          echo "Service ID: ${{ secrets.RENDER_SERVICE_ID_BACKEND }}"
          curl -v -X GET \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_BACKEND }}"

      # Деплой через прямые API-запросы
      - name: Deploy Backend
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_BACKEND }}/deploys" \
            -d '{"clearCache": "do_not_clear"}')
          
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Deploy failed with status $RESPONSE"
            exit 1
          fi
          echo "Deploy triggered successfully"

      - name: Deploy Frontend
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_FRONTEND }}/deploys" \
            -d '{"clearCache": "do_not_clear"}')
          
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Deploy failed with status $RESPONSE"
            exit 1
          fi
          echo "Deploy triggered successfully"

name: Deploy to Render
on:
  push:
    branches: [ "master" ]  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Забираем код из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Сборка backend (Java)
      - name: Build backend JAR
        run: |
          cd backend
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      # Шаг 3: Сборка frontend (если нужно)
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      # Шаг 4: Логинимся в Docker Hub (если образы пушатся в registry)
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Шаг 5: Собираем Docker-образы
      - name: Build and push backend image
        run: |
          docker build -t your-dockerhub/backend:latest -f Dockerfile.backend .
          docker push your-dockerhub/backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t your-dockerhub/frontend:latest -f Dockerfile.frontend .
          docker push your-dockerhub/frontend:latest

      # Шаг 6: Деплой на Render.com через API
      - name: Deploy backend to Render
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_BACKEND }}/deploys" \
            -d '{
              "clearCache": "do_not_clear"
            }'

      - name: Deploy frontend to Render
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_FRONTEND }}/deploys" \
            -d '{
              "clearCache": "do_not_clear"
            }'
